package com.bridgelabz.datastructures;

public class QueueUtility<T> {
	 private class Node<T> {
		T data;
		Node next;
		public Node(T v) {
			this.data  = v;
		}
	}
	
	private int size;
	private Node<T> head;
	private Node<T> tail;
	
	public MyQueue<T>() {
		size = 0;
		head = null;
		tail = null;
	}
	
	public int size() {
		return size;
	}
	
	public boolean isEmpty() {
		return size == 0;
	}
	
	
	public void add(T data) {
		if (head == null) {
			head = new Node(data);
			tail = head;
		} else {
			tail.next = new Node(data);
			tail = tail.next;
		}
		
		size++;
	}
	
	public T remove() {
		if (size == 0) return null;
		
		V v = head.v;
		head = head.next;
		size--;
		
		return v;
	}
	
	
	public V peek() {
		if (size == 0) return null;
		
		V v = head.v;
		
		return v;
	}
	
}
