package com.bridgelabz.datastructures;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.Arrays;

import com.bridgelabz.algorithmprograms.Utility;

class Node<T>
{
	T data;
	Node next;
}

public class tp<T> {

	Node head ;
	//
	public void addelement(T data)
	{
		Node<T> newnode = new Node();
		newnode.data = data;  //adding node
		newnode.next = null;
		
		if(head == null)
		{
		 head= newnode;
		// System.out.println(head.data);
		}
		else
		{
			Node TraversingNode = head;
			while(TraversingNode.next != null)
			{
				TraversingNode = TraversingNode.next;
			}
			TraversingNode.next = newnode;
	
		}
	}
	public void search(key)
	{
	   Node<T> node = head;
	   int flag =0,i =0,index;
	   while (node.next !=null) 
	   {
		if(node.data.equals(key))
		{
			flag =1;
			index =i;
			System.out.println("Found at" + index);
			
		}
		node = node.next;
		i++;
	}
	 while(node.next != null)
	 {
		 if(node.data.equals(key))
			{
				
				System.out.println("Found at last");
				break;
			}
		 else
		 {
			 System.out.println("Not Found");
		 }
	 }
	}
	public void remove(int key)
	{
		Node temp = head;
		Node previous = null;
		if(key == 0)
		{
			head =temp.next;
			System.out.println("Found and deleted :" + key);
			
		}
		for (int i=0; temp!=null && i<key-1; i++) 
            temp = temp.next; 
		
			 if (temp == null || temp.next == null) 
		     return; 
			 
			 Node next = temp.next.next; 
			 temp.next = next;
		
		
		
	}
	
	
	
	
	
	
	public void print()
	{
		Node node = head;
		while(node !=null)
		{
			System.out.println(node.data);
			node = node.next;
		}
		
	}

	public static void main(String[] args) throws FileNotFoundException {
	 tp<String> t =new tp<String>();
	 
		File file=new File("/home/admin1/Desktop/aa");     
	      FileReader fr=new FileReader(file);   
	      BufferedReader br = new BufferedReader(fr);
	      
	      String line = " ";
	   try {
		   while((line = br.readLine()) != null)
		      {
		    	  String[] str = line.split(",");
		    	// int []arr = new int[str.length];
		    	 System.out.println(Arrays.toString(str));
		    //	 for (int i = 0; i < str.length; i++) {
				//	arr[i] = Integer.parseInt(str[i]);
				//}
		    	 for (int i = 0; i < str.length; i++) {
					t.addelement((str[i]));
				}
		    	 t.print();
		    	int s = Utility.integerScanner();
		    	t.search(s);
		    
	
	// int data =Utility.integerScanner();
	
	}
	   
	   } catch (Exception e) 
    {
        System.out.println(e.getStackTrace());
        // TODO: handle exception
     }	
}
}


