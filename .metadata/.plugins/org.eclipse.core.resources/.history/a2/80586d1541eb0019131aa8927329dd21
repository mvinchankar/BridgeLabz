package com.bridgelabz.datastructures;

import com.bridgelabz.algorithmprograms.Utility;

public class StackPrimeNumber {
	 public static int [] printAnagram(int range)
	 {
		int [] anagram = new int [range];
		   int[] prime = new int [range];
		   int position =0;
		   for (int i = 2; i < range; i++) 
		   {
			  int  count = 0;
			  for (int j = 2; j <= i / 2; j++) 
			  {
			    if (i % j == 0) 
			    {
			    count++;
			    }
			  }

			  if (count == 0) 
			  {
	             prime[i] = i ;
			  }
			  if(prime[i] != 0)
			  for (int j = 1; j <prime.length; j++) 
			  {
				   if(prime[i] != prime[j])
				   {
				     if(Utility.isPrimeAnagram(prime[i],prime[j]))
				     {
					  anagram[position++] = prime[j];
					 
				     }
				    
				   }
			  }
			 // System.out.println(Arrays.toString(anagram));
		    }
         return anagram;
	}
	public static void main(String[] args) {
		int number = Utility.integerScanner();
		stackgeneric stack =new stackgeneric();
			int[] anagrams= new int[number];
			for (int i = 0; i < anagrams.length; i++) 
			{
			if (anagrams[i]!=0) 
			{
			
			stack.push(anagrams[i]);
			}
			}
			printAnagram(number);
			System.out.println("--------------------");
			for (int i = 0; i < anagrams.length-2; i++) {
			if(!stack.isEmpty())
			System.out.println(stack.pop());
			}
	}
    
}

