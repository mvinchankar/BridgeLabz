package com.bridgelabz.algorithmprograms;

public class MyMergeSort  
{  
    void merge(int arr[], int low, int mid, int end)  
    {  
  
         int l = mid - low + 1;  
         int r= end - mid;  
  
         int subArray1[] = new int [l];  
         int subArray2[] = new int [r];  
  
         for (int i=0; i<l; ++i)  
         subArray1[i] = arr[low + i];  
  
         for (int j=0; j<r; ++j)  
         subArray2[j] = arr[mid + 1+ j];  
  
  
         int i = 0, j = 0;  
         int k = low;  
        while (i<l&&j<r)  
        {  
			if (subArray1[i] <= subArray2[j])  
			{  
			  arr[k] = subArray1[i];  
			  i++;  
			}  
			else  
			{  
			 arr[k] = subArray2[j];  
			 j++;  
			}  
			 k++;  
		}  
		while (i<l)  
		{  
			arr[k] = subArray1[i];  
			i++;  
			k++;  
		}  
			  
		while (j<r)  
		{  
			arr[k] = subArray2[j];  
			j++;  
			k++;  
		}  
}  
  
void mergeSort(int arr[], int low, int end)  
{  
if (beg<end)  
{  
int mid = (beg+end)/2;  
mergeSort(arr, low, mid);  
mergeSort(arr , mid+1, end);  
merge(arr, beg, mid, end);  
}  
}  
public static void main(String args[])  
{  
intarr[] = {90,23,101,45,65,23,67,89,34,23};  
MyMergeSort ob = new MyMergeSort();  
ob.sort(arr, 0, arr.length-1);  
  
System.out.println("\nSorted array");  
for(int i =0; i<arr.length;i++)  
{  
    System.out.println(arr[i]+"");  
}  
}  
}  