package com.bridgelabz.datastructures;

import com.bridgelabz.algorithmprograms.Utility;

public class QueuePrimeNumber {
	public static int [] printAnagram(int range)
	{
		int [] anagram = new int [range];
		   int[] prime = new int [range];
		   int position =0;
		   for (int i = 2; i < range; i++) 
		   {
			  int  count = 0;
			  for (int j = 2; j <= i / 2; j++) 
			  {
			    if (i % j == 0) 
			    {
			    count++;
			    }
			  }

			  if (count == 0) 
			  {
	             prime[i] = i ;
			  }
			  if(prime[i] != 0)
			  for (int j = 1; j <prime.length; j++) 
			  {
				   if(prime[i] != prime[j])
				   {
				     if(Utility.isPrimeAnagram(prime[i],prime[j]))
				     {
					  anagram[position] = prime[i];
					  position++;
				     }
				    
				   }
			  }
		    }
         return anagram;
	}

	public static void main(String[] args) {
		int number = Utility.integerScanner();
		QueueUtility<Integer> queue =new QueueUtility<Integer>();
		int [] anagram = printAnagram(number);
		for (int i = 0; i <anagram.length; i++) {
			for (int k = 0; k < anagram.length-1; k++) {
			if(anagram[i]!=anagram[k])
			{
			if(anagram[i] !=0)
			{
				queue.enqueue(anagram[i]);
			}
			//queue.display();
		}
			}
        
	}

		queue.display();
}
}
